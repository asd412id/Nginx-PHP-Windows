#!/bin/bash
cd $(dirname "$0")

if [ "$1" == "start" ]
then
	n=${2:-5}
	((x=n-1))

	if [ $x -lt 0 ]
	then
		x=0;
	fi
	sblock="
	upstream backend{
		server 127.0.0.1:9000;
		keepalive_requests 300;
		least_conn;
	}
	";
	
	echo $sblock > ./sites-enabled/upstream.conf
	./$1.bat $x
	echo "NginX Server started!"
elif [ "$1" == "create" ]
then
	root=${2//\\//}
	sblock="
	server {
	  listen ${3:-80};
	  listen [::]:${3:-80};

	  index index.php index.html;
	  root ${root:-/html};

	  server_name ${6:-localhost};

	  location / {
		try_files \$uri \$uri/ /index.php?\$args;
	  }

	  client_max_body_size 128M;

	  location ~* \\.php\$ {
		include fastcgi.conf;
		fastcgi_split_path_info ^(.+\\.php)(/.+)\$;
		fastcgi_pass backend;
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
		fastcgi_param PATH_INFO \$fastcgi_path_info;
		fastcgi_read_timeout 300s;
	  }
	}
	server {
	  listen 443 ssl;
	  listen [::]:443 ssl;
	  
	  ssl_certificate /ssl/ssl.crt/server.crt;
	  ssl_certificate_key /ssl/ssl.key/server.key;
	  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	  index index.php index.html;
	  root ${root:-/html};

	  location / {
		index index.html;
		try_files \$uri \$uri/ /index.php?\$args;
	  }

	  client_max_body_size 0;

	  location ~* \\.php\$ {
		include fastcgi.conf;
		fastcgi_split_path_info ^(.+\\.php)(/.+)\$;
		fastcgi_pass backend;
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
		fastcgi_param PATH_INFO \$fastcgi_path_info;
		fastcgi_read_timeout 300s;
	  }
	}
	";
	
	echo $sblock > ./sites-enabled/${4:-default}.conf
	echo "NginX Server ${4:-default} created!"
elif [ "$1" == "destroy" ]
then
	if [ "$2" == "--all" ]
	then
		rm ./sites-enabled/*.conf
		echo "NginX Server blocks destroyed!"
	else
		file=./sites-enabled/$2.conf
		if [ -f $file ]
		then
			rm $file
			echo "NginX Server $2 destroyed!"
		else
			echo "Server Block not Found!"
		fi
	fi
elif [ "$1" == "stop" ]
then
	./$1.bat
	echo "NginX Server stopped!"
else
	echo "Usage:";
	echo "- create [root_directory|default: '/html'|<string>] [port|default: 80|<number>] [server_name|default: localhost|<string>]";
	echo "- destroy [server_name|--all for destroy all]";
	echo "- start [max_upstream_server|default: 5|<number>]";
	echo "- stop";
	echo "Important: Make sure to execute \"nginx stop\" before run create or destroy command!";
fi
